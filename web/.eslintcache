[{"/home/nonsense/Documents/www/chat/web/src/routes/app.routes.tsx":"1","/home/nonsense/Documents/www/chat/web/src/App.tsx":"2","/home/nonsense/Documents/www/chat/web/src/pages/SignIn/styles.ts":"3","/home/nonsense/Documents/www/chat/web/src/components/Header/index.tsx":"4","/home/nonsense/Documents/www/chat/web/src/components/Input/styles.ts":"5","/home/nonsense/Documents/www/chat/web/src/index.tsx":"6","/home/nonsense/Documents/www/chat/web/src/services/api.ts":"7","/home/nonsense/Documents/www/chat/web/src/pages/SignIn/index.tsx":"8","/home/nonsense/Documents/www/chat/web/src/components/Header/styles.ts":"9","/home/nonsense/Documents/www/chat/web/src/routes/auth.routes.tsx":"10","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/index.tsx":"11","/home/nonsense/Documents/www/chat/web/src/pages/SignUp/index.tsx":"12","/home/nonsense/Documents/www/chat/web/src/routes/index.tsx":"13","/home/nonsense/Documents/www/chat/web/src/pages/SignUp/styles.ts":"14","/home/nonsense/Documents/www/chat/web/src/components/Input/index.tsx":"15","/home/nonsense/Documents/www/chat/web/src/context/Auth.tsx":"16","/home/nonsense/Documents/www/chat/web/src/components/Alert/index.tsx":"17","/home/nonsense/Documents/www/chat/web/src/components/Alert/styles.ts":"18","/home/nonsense/Documents/www/chat/web/src/context/Error.tsx":"19","/home/nonsense/Documents/www/chat/web/src/assets/styles/globalStyles.ts":"20","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/styles.ts":"21","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/Middle/index.tsx":"22","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/LeftSide/styles.ts":"23","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/LeftSide/index.tsx":"24","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/RightSide/index.tsx":"25","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/Middle/styles.ts":"26","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/RightSide/styles.ts":"27","/home/nonsense/Documents/www/chat/web/src/components/SearchInput/styles.ts":"28","/home/nonsense/Documents/www/chat/web/src/components/SearchInput/index.tsx":"29","/home/nonsense/Documents/www/chat/web/src/components/NotificationItem/index.tsx":"30","/home/nonsense/Documents/www/chat/web/src/components/NotificationItem/styles.ts":"31","/home/nonsense/Documents/www/chat/web/src/services/socketIo.ts":"32"},{"size":288,"mtime":1610145004794,"results":"33","hashOfConfig":"34"},{"size":315,"mtime":1609892488532,"results":"35","hashOfConfig":"34"},{"size":1595,"mtime":1610144175603,"results":"36","hashOfConfig":"34"},{"size":426,"mtime":1611161603324,"results":"37","hashOfConfig":"34"},{"size":718,"mtime":1611159020410,"results":"38","hashOfConfig":"34"},{"size":301,"mtime":1609881676445,"results":"39","hashOfConfig":"34"},{"size":115,"mtime":1609795507883,"results":"40","hashOfConfig":"34"},{"size":3040,"mtime":1610246318178,"results":"41","hashOfConfig":"34"},{"size":407,"mtime":1611163895252,"results":"42","hashOfConfig":"34"},{"size":466,"mtime":1610230229817,"results":"43","hashOfConfig":"34"},{"size":4730,"mtime":1611162278525,"results":"44","hashOfConfig":"34"},{"size":6170,"mtime":1610246308614,"results":"45","hashOfConfig":"34"},{"size":371,"mtime":1610237439728,"results":"46","hashOfConfig":"34"},{"size":2000,"mtime":1610232866763,"results":"47","hashOfConfig":"34"},{"size":1578,"mtime":1610843056314,"results":"48","hashOfConfig":"34"},{"size":2006,"mtime":1610670731469,"results":"49","hashOfConfig":"34"},{"size":866,"mtime":1610235856251,"results":"50","hashOfConfig":"34"},{"size":557,"mtime":1610235006011,"results":"51","hashOfConfig":"34"},{"size":598,"mtime":1610230076374,"results":"52","hashOfConfig":"34"},{"size":1243,"mtime":1611164022215,"results":"53","hashOfConfig":"34"},{"size":5311,"mtime":1611164302846,"results":"54","hashOfConfig":"34"},{"size":2290,"mtime":1611168029438,"results":"55","hashOfConfig":"34"},{"size":3447,"mtime":1611164093489,"results":"56","hashOfConfig":"34"},{"size":2608,"mtime":1610842471671,"results":"57","hashOfConfig":"34"},{"size":4779,"mtime":1611162338579,"results":"58","hashOfConfig":"34"},{"size":2541,"mtime":1610747179807,"results":"59","hashOfConfig":"34"},{"size":3675,"mtime":1611164505259,"results":"60","hashOfConfig":"34"},{"size":683,"mtime":1610745777296,"results":"61","hashOfConfig":"34"},{"size":622,"mtime":1610746228080,"results":"62","hashOfConfig":"34"},{"size":1384,"mtime":1610921045547,"results":"63","hashOfConfig":"34"},{"size":975,"mtime":1610841111050,"results":"64","hashOfConfig":"34"},{"size":767,"mtime":1611167352760,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1dfotus",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"71"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"83"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nonsense/Documents/www/chat/web/src/routes/app.routes.tsx",[],["140","141"],"/home/nonsense/Documents/www/chat/web/src/App.tsx",[],["142","143"],"/home/nonsense/Documents/www/chat/web/src/pages/SignIn/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/components/Header/index.tsx",[],["144","145"],"/home/nonsense/Documents/www/chat/web/src/components/Input/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/index.tsx",[],"/home/nonsense/Documents/www/chat/web/src/services/api.ts",[],["146","147"],"/home/nonsense/Documents/www/chat/web/src/pages/SignIn/index.tsx",[],"/home/nonsense/Documents/www/chat/web/src/components/Header/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/routes/auth.routes.tsx",[],"/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/index.tsx",["148","149","150"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport Header from \"../../components/Header\";\nimport { useAuth } from \"../../context/Auth\";\nimport LeftSide from \"./LeftSide\";\nimport Middle from \"./Middle\";\nimport RightSide from \"./RightSide\";\n\nimport {\n  Container,\n  Content,\n  /* PANEL */\n  RSOnOrOff,\n  RSUserPanel,\n  RSUserNotifications,\n  RSNotificationIcon,\n  RSUserOptions,\n  RSUserAvatar,\n  RSIndicator,\n  /**/\n  RSUserPanelModal,\n  RSUserPanelHeader,\n  RSUserName,\n  RSUserPanelBody,\n  RSUserStatus,\n  RSUserTitle,\n  RSUserButton,\n  RSUserFooter,\n  RSIconLogOut,\n  RSUserLogOut,\n  /*Notification Panel*/\n  RSNotificationModal,\n  RSNotificationHeader,\n  RSNotificationTitle,\n  RSNotificationBody,\n  RSNotificationText,\n  RSNotificationsList,\n} from \"./styles\";\n\nimport NotificationItem from \"../../components/NotificationItem\";\n\nimport iconNotifications from \"../../assets/notifications.svg\";\nimport iconBack from \"../../assets/back.svg\";\nimport { RiCloseLine } from \"react-icons/ri\";\n\nimport { connect } from \"../../services/socketIo\";\n\nconst Dashboard: React.FC = () => {\n  const { user, signed, signOut  } = useAuth();\n\n  const history = useHistory();\n\n  // useEffect(() => {\n  //   //const username: string | null | undefined = user?.name;\n  //   connect();\n  // }, []);\n  const [showOptins, setShowOptions] = useState(false);\n  const [showNotifications, setShowNotifications] = useState(false);\n\n  const [notifications, setNotifications] = useState<string[]>([]);\n\n  const [checked, setChecked] = useState(true);\n\n  function handleSignOut() {\n    signOut();\n    history.push(\"/\");\n  }\n\n  return (\n    <Container>\n      <Header path=\"/dashboard\">\n        <RSUserPanel>\n          <RSUserNotifications\n            onClick={() =>\n              setShowNotifications(showNotifications ? false : true)\n            }\n          >\n            {notifications.length > 0 && (\n              <RSIndicator\n                color=\"#EC1919\"\n                position=\"absolute\"\n                bottom=\"0.4rem\"\n                right=\"0.7rem\"\n              />\n            )}\n            <RSNotificationIcon src={iconNotifications} />\n          </RSUserNotifications>\n          <RSUserOptions\n            onClick={() => setShowOptions(showOptins ? false : true)}\n          >\n            <RSUserAvatar src={user?.avatar || \"\"} />\n            <RSOnOrOff\n              signed={!checked ? checked : signed}\n              position=\"absolute\"\n              bottom=\"0.1rem\"\n              right=\"0rem\"\n            />\n          </RSUserOptions>\n          <RSNotificationModal show={showNotifications}>\n            <RSNotificationHeader>\n              <div></div>\n              <RSNotificationTitle>Notifications</RSNotificationTitle>\n              <RiCloseLine\n                size={20}\n                color=\"#e0e0e0\"\n                onClick={() => setShowNotifications(false)}\n              />\n            </RSNotificationHeader>\n\n            <RSNotificationBody>\n              <RSNotificationText>Most recent</RSNotificationText>\n              <RSNotificationsList>\n                {notifications.map((item, index) => (\n                  <NotificationItem\n                    key={index}\n                    id={index}\n                    text={item}\n                    time=\"2 min\"\n                  />\n                ))}\n              </RSNotificationsList>\n            </RSNotificationBody>\n          </RSNotificationModal>\n          <RSUserPanelModal show={showOptins}>\n            <RSUserPanelHeader>\n              <RSUserOptions>\n                <RSUserAvatar src={user?.avatar || \"\"} />\n                <RSOnOrOff\n                  signed={!checked ? checked : signed}\n                  position=\"absolute\"\n                  bottom=\"0.1rem\"\n                  right=\"0rem\"\n                />\n              </RSUserOptions>\n              <RSUserName>{user?.name}</RSUserName>\n            </RSUserPanelHeader>\n            <RSUserPanelBody>\n              <RSUserStatus>\n                <RSUserTitle>Online</RSUserTitle>\n                <RSUserButton\n                  onClick={() => setChecked(checked ? false : true)}\n                  checked={checked}\n                >\n                  <div></div>\n                </RSUserButton>\n              </RSUserStatus>\n            </RSUserPanelBody>\n            <RSUserFooter onClick={handleSignOut}>\n              <RSIconLogOut src={iconBack} />\n              <RSUserLogOut>log out</RSUserLogOut>\n            </RSUserFooter>\n          </RSUserPanelModal>\n        </RSUserPanel>\n      </Header>\n      <Content>\n        <LeftSide />\n        <Middle />\n        <RightSide />\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","/home/nonsense/Documents/www/chat/web/src/pages/SignUp/index.tsx",[],["151","152"],"/home/nonsense/Documents/www/chat/web/src/routes/index.tsx",[],"/home/nonsense/Documents/www/chat/web/src/pages/SignUp/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/components/Input/index.tsx",[],"/home/nonsense/Documents/www/chat/web/src/context/Auth.tsx",["153"],"import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport api from \"../services/api\";\n\ninterface IUser {\n  id: number | null;\n  name: string | null;\n  email: string | null;\n  avatar: string | null;\n  updated_at: Date | null;\n}\n\ninterface IAuth {\n  signed: boolean;\n  user: IUser | null;\n  loading: boolean;\n  signIn(email: string, password: string): Promise<any>;\n  signOut(): Promise<any>;\n}\n\nconst AuthContext = createContext<IAuth>({} as IAuth);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [user, setUser] = useState<IUser | null>(null);\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function loadLocalStorage() {\n      const localUser: IUser = JSON.parse(localStorage.getItem(\"@Auth:user\") || '{}');\n      const localToken = localStorage.getItem(\"@Auth:token\");\n      // // simular uma lentidão para mostar o loading.\n      //await new Promise((resolve) => setTimeout(resolve, 1000));\n      if (localStorage && localToken) {\n        setUser(localUser);\n        api.defaults.headers[\"Authorization\"] = `Bearer ${localToken}`;\n      }\n      setLoading(false);\n    }\n    loadLocalStorage();\n  }, []);\n\n  async function signIn(email: string, password: string) {\n    setLoading(true);\n    const response = await api.post(\"/auth/login\", {\n      email,\n      password,\n    });\n    const { user, token } = response.data;\n\n    setUser(user);\n\n    api.defaults.headers[\"Authorization\"] = `Bearer ${token}`;\n\n    localStorage.setItem(\"@Auth:user\", JSON.stringify(user));\n    localStorage.setItem(\"@Auth:token\", token);\n\n    setLoading(false);\n  }\n  async function signOut() {\n    localStorage.clear();\n    setUser(null);\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ signed: !!user, user, loading, signIn, signOut }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  return context;\n}\n","/home/nonsense/Documents/www/chat/web/src/components/Alert/index.tsx",["154","155"],"import React, { useEffect, useState, InputHTMLAttributes } from \"react\";\n\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { useError } from \"../../context/Error\";\nimport { AlertTag } from \"./styles\";\n\ninterface IAlert extends InputHTMLAttributes<HTMLDivElement> {\n  bg: string;\n  label: string;\n  id?: string;\n}\n\nconst Alert: React.FC<IAlert> = ({ label, bg, id, ...props }) => {\n  const { errorMessage, setErrorMessage } = useError();\n  function handleOnClose() {\n    var filtered = errorMessage.filter(function (value) {\n      return value !== errorMessage[Number(id)];\n    });\n\n    setErrorMessage([...filtered]);\n  }\n\n  return (\n    <AlertTag bg={bg} onClick={handleOnClose} {...props}>\n      <span>{label}</span>\n      <div></div>\n      <AiOutlineClose size={16} color=\"#E0E0E0\" onClick={handleOnClose} />\n    </AlertTag>\n  );\n};\n\nexport default Alert;\n","/home/nonsense/Documents/www/chat/web/src/components/Alert/styles.ts",[],["156","157"],"/home/nonsense/Documents/www/chat/web/src/context/Error.tsx",[],"/home/nonsense/Documents/www/chat/web/src/assets/styles/globalStyles.ts",[],"/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/Middle/index.tsx",["158","159"],"/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/LeftSide/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/LeftSide/index.tsx",["160"],"import React, { useState } from \"react\";\n\nimport {\n  Content,\n  LSRecents,\n  LSTitle,\n  LSRecentList,\n  LSListItem,\n  LSImg,\n  LSTexts,\n  LSName,\n  LSRecentMessage,\n  LSOptions,\n  LSMoreOptions,\n  LSTime,\n  LSMessageCount,\n  LSMore,\n  LSGroupInfo,\n  LSGHeader,\n  LSGTexts,\n  LSGTitle,\n  LSGDescription,\n  LSGMore,\n  LSGBody,\n  LSGUserList,\n  LSGUserItem,\n  LSGImg,\n  LSGCount,\n} from \"./styles\";\n\nimport SearchInput from \"../../../components/SearchInput\";\n\nimport iconDots from \"../../../assets/optionsDots.svg\";\nimport iconLoading from \"../../../assets/loading.svg\";\nimport iconInfo from \"../../../assets/info.svg\";\n\nconst LeftSide: React.FC = () => {\n  const [isMessage, setIsMessage] = useState(false);\n  return (\n    <Content>\n      <LSRecents>\n        <SearchInput label=\"Search\" />\n        <LSTitle>Recents chats</LSTitle>\n        <LSRecentList>\n          {[1, 2, 3, 4].map((item, index) => (\n            <LSListItem key={index}>\n              <LSImg src=\"https://i.pinimg.com/originals/b0/48/d3/b048d3b08bcbd8d49ec26754289d665c.jpg\" />\n              <LSTexts>\n                <LSName color=\"#9E472B\">nonsense</LSName>\n                <LSRecentMessage>carai de asa</LSRecentMessage>\n              </LSTexts>\n\n              <LSOptions>\n                <LSMoreOptions src={iconDots} />\n                {isMessage ? (\n                  <LSMessageCount>7</LSMessageCount>\n                ) : (\n                  <LSTime>04 min</LSTime>\n                )}\n              </LSOptions>\n            </LSListItem>\n          ))}\n        </LSRecentList>\n        <LSMore src={iconLoading} />\n      </LSRecents>\n\n      <LSGroupInfo>\n        <LSGHeader>\n          <LSGTexts>\n            <LSGTitle size=\"0.75rem\">AKATSUKI</LSGTitle>\n            <LSGDescription size=\"0.688rem\">\n              Created 11/14/2020 at 19:19\n            </LSGDescription>\n          </LSGTexts>\n          <LSGMore src={iconInfo} />\n        </LSGHeader>\n\n        <LSGBody>\n          <LSGTexts>\n            <LSGTitle size=\"1.125rem\">Description</LSGTitle>\n            <LSGDescription size=\"0.75rem\">\n              Não sei oq vai em uma ...\n            </LSGDescription>\n          </LSGTexts>\n\n          <LSGUserList>\n            {[1, 2, 3].map((item) => (\n              <LSGUserItem key={item}>\n                <LSGImg src=\"https://i.pinimg.com/originals/b0/48/d3/b048d3b08bcbd8d49ec26754289d665c.jpg\" />\n              </LSGUserItem>\n            ))}\n            <LSGCount>\n              <span>+28</span>\n            </LSGCount>\n          </LSGUserList>\n        </LSGBody>\n      </LSGroupInfo>\n    </Content>\n  );\n};\n\nexport default LeftSide;\n","/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/RightSide/index.tsx",["161","162"],"/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/Middle/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/pages/Dashboard/RightSide/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/components/SearchInput/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/components/SearchInput/index.tsx",[],"/home/nonsense/Documents/www/chat/web/src/components/NotificationItem/index.tsx",[],"/home/nonsense/Documents/www/chat/web/src/components/NotificationItem/styles.ts",[],"/home/nonsense/Documents/www/chat/web/src/services/socketIo.ts",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"163","replacedBy":"167"},{"ruleId":"165","replacedBy":"168"},{"ruleId":"163","replacedBy":"169"},{"ruleId":"165","replacedBy":"170"},{"ruleId":"163","replacedBy":"171"},{"ruleId":"165","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"177","line":47,"column":10,"nodeType":"175","messageId":"176","endLine":47,"endColumn":17},{"ruleId":"173","severity":1,"message":"178","line":61,"column":25,"nodeType":"175","messageId":"176","endLine":61,"endColumn":41},{"ruleId":"163","replacedBy":"179"},{"ruleId":"165","replacedBy":"180"},{"ruleId":"173","severity":1,"message":"181","line":2,"column":10,"nodeType":"175","messageId":"176","endLine":2,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":1,"column":17,"nodeType":"175","messageId":"176","endLine":1,"endColumn":26},{"ruleId":"173","severity":1,"message":"182","line":1,"column":28,"nodeType":"175","messageId":"176","endLine":1,"endColumn":36},{"ruleId":"163","replacedBy":"183"},{"ruleId":"165","replacedBy":"184"},{"ruleId":"173","severity":1,"message":"185","line":23,"column":8,"nodeType":"175","messageId":"176","endLine":23,"endColumn":11},{"ruleId":"173","severity":1,"message":"186","line":32,"column":11,"nodeType":"175","messageId":"176","endLine":32,"endColumn":19},{"ruleId":"173","severity":1,"message":"187","line":38,"column":21,"nodeType":"175","messageId":"176","endLine":38,"endColumn":33},{"ruleId":"173","severity":1,"message":"188","line":46,"column":10,"nodeType":"175","messageId":"176","endLine":46,"endColumn":27},{"ruleId":"189","severity":1,"message":"190","line":116,"column":9,"nodeType":"191","endLine":116,"endColumn":26},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],["192"],["193"],["192"],["193"],["192"],["193"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'connect' is defined but never used.","'setNotifications' is assigned a value but never used.",["192"],["193"],"'useHistory' is defined but never used.","'useState' is defined but never used.",["192"],["193"],"'api' is defined but never used.","'IMessage' is defined but never used.","'setIsMessage' is assigned a value but never used.","'subscribeToNewDev' is defined but never used.","react/jsx-pascal-case","Imported JSX component Explorer_Header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-global-assign","no-unsafe-negation"]